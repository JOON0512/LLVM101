digraph "CFG for 'main' function" {
	label="CFG for 'main' function";

	Node0x55da38c7bd20 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#7396f570",label="{%0:\l  %1 = alloca i32, align 4\l  %2 = alloca i32, align 4\l  %3 = alloca i32, align 4\l  %4 = alloca i32, align 4\l  %5 = alloca [512 x [512 x i32]], align 16\l  %6 = alloca [512 x [512 x i32]], align 16\l  %7 = alloca [512 x [512 x i32]], align 16\l  store i32 0, ptr %1, align 4\l  store i32 0, ptr %2, align 4\l  br label %8\l}"];
	Node0x55da38c7bd20 -> Node0x55da38c81600;
	Node0x55da38c81600 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#cedaeb70",label="{%8:\l8:                                                \l  %9 = load i32, ptr %2, align 4\l  %10 = icmp slt i32 %9, 512\l  br i1 %10, label %11, label %37\l|{<s0>T|<s1>F}}"];
	Node0x55da38c81600:s0 -> Node0x55da38c81650;
	Node0x55da38c81600:s1 -> Node0x55da38c81830;
	Node0x55da38c81650 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#cedaeb70",label="{%11:\l11:                                               \l  store i32 0, ptr %3, align 4\l  br label %12\l}"];
	Node0x55da38c81650 -> Node0x55da38c816a0;
	Node0x55da38c816a0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f6a38570",label="{%12:\l12:                                               \l  %13 = load i32, ptr %3, align 4\l  %14 = icmp slt i32 %13, 512\l  br i1 %14, label %15, label %33\l|{<s0>T|<s1>F}}"];
	Node0x55da38c816a0:s0 -> Node0x55da38c816f0;
	Node0x55da38c816a0:s1 -> Node0x55da38c81790;
	Node0x55da38c816f0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7a88970",label="{%15:\l15:                                               \l  %16 = load i32, ptr %2, align 4\l  %17 = load i32, ptr %2, align 4\l  %18 = sext i32 %17 to i64\l  %19 = getelementptr inbounds [512 x [512 x i32]], ptr %5, i64 0, i64 %18\l  %20 = load i32, ptr %3, align 4\l  %21 = sext i32 %20 to i64\l  %22 = getelementptr inbounds [512 x i32], ptr %19, i64 0, i64 %21\l  store i32 %16, ptr %22, align 4\l  %23 = load i32, ptr %3, align 4\l  %24 = load i32, ptr %2, align 4\l  %25 = sext i32 %24 to i64\l  %26 = getelementptr inbounds [512 x [512 x i32]], ptr %6, i64 0, i64 %25\l  %27 = load i32, ptr %3, align 4\l  %28 = sext i32 %27 to i64\l  %29 = getelementptr inbounds [512 x i32], ptr %26, i64 0, i64 %28\l  store i32 %23, ptr %29, align 4\l  br label %30\l}"];
	Node0x55da38c816f0 -> Node0x55da38c81740;
	Node0x55da38c81740 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7a88970",label="{%30:\l30:                                               \l  %31 = load i32, ptr %3, align 4\l  %32 = add nsw i32 %31, 1\l  store i32 %32, ptr %3, align 4\l  br label %12, !llvm.loop !6\l}"];
	Node0x55da38c81740 -> Node0x55da38c816a0;
	Node0x55da38c81790 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#cedaeb70",label="{%33:\l33:                                               \l  br label %34\l}"];
	Node0x55da38c81790 -> Node0x55da38c817e0;
	Node0x55da38c817e0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#cedaeb70",label="{%34:\l34:                                               \l  %35 = load i32, ptr %2, align 4\l  %36 = add nsw i32 %35, 1\l  store i32 %36, ptr %2, align 4\l  br label %8, !llvm.loop !8\l}"];
	Node0x55da38c817e0 -> Node0x55da38c81600;
	Node0x55da38c81830 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#7396f570",label="{%37:\l37:                                               \l  store i32 0, ptr %2, align 4\l  br label %38\l}"];
	Node0x55da38c81830 -> Node0x55da38c81880;
	Node0x55da38c81880 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#cedaeb70",label="{%38:\l38:                                               \l  %39 = load i32, ptr %2, align 4\l  %40 = icmp slt i32 %39, 512\l  br i1 %40, label %41, label %84\l|{<s0>T|<s1>F}}"];
	Node0x55da38c81880:s0 -> Node0x55da38c818d0;
	Node0x55da38c81880:s1 -> Node0x55da38c81bf0;
	Node0x55da38c818d0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#cedaeb70",label="{%41:\l41:                                               \l  store i32 0, ptr %4, align 4\l  br label %42\l}"];
	Node0x55da38c818d0 -> Node0x55da38c81920;
	Node0x55da38c81920 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f6a38570",label="{%42:\l42:                                               \l  %43 = load i32, ptr %4, align 4\l  %44 = icmp slt i32 %43, 512\l  br i1 %44, label %45, label %80\l|{<s0>T|<s1>F}}"];
	Node0x55da38c81920:s0 -> Node0x55da38c81970;
	Node0x55da38c81920:s1 -> Node0x55da38c81b50;
	Node0x55da38c81970 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7a88970",label="{%45:\l45:                                               \l  store i32 0, ptr %3, align 4\l  br label %46\l}"];
	Node0x55da38c81970 -> Node0x55da38c819c0;
	Node0x55da38c819c0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%46:\l46:                                               \l  %47 = load i32, ptr %3, align 4\l  %48 = icmp slt i32 %47, 512\l  br i1 %48, label %49, label %76\l|{<s0>T|<s1>F}}"];
	Node0x55da38c819c0:s0 -> Node0x55da38c81a10;
	Node0x55da38c819c0:s1 -> Node0x55da38c81ab0;
	Node0x55da38c81a10 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%49:\l49:                                               \l  %50 = load i32, ptr %2, align 4\l  %51 = sext i32 %50 to i64\l  %52 = getelementptr inbounds [512 x [512 x i32]], ptr %5, i64 0, i64 %51\l  %53 = load i32, ptr %4, align 4\l  %54 = sext i32 %53 to i64\l  %55 = getelementptr inbounds [512 x i32], ptr %52, i64 0, i64 %54\l  %56 = load i32, ptr %55, align 4\l  %57 = load i32, ptr %4, align 4\l  %58 = sext i32 %57 to i64\l  %59 = getelementptr inbounds [512 x [512 x i32]], ptr %6, i64 0, i64 %58\l  %60 = load i32, ptr %3, align 4\l  %61 = sext i32 %60 to i64\l  %62 = getelementptr inbounds [512 x i32], ptr %59, i64 0, i64 %61\l  %63 = load i32, ptr %62, align 4\l  %64 = mul nsw i32 %56, %63\l  %65 = load i32, ptr %2, align 4\l  %66 = sext i32 %65 to i64\l  %67 = getelementptr inbounds [512 x [512 x i32]], ptr %7, i64 0, i64 %66\l  %68 = load i32, ptr %3, align 4\l  %69 = sext i32 %68 to i64\l  %70 = getelementptr inbounds [512 x i32], ptr %67, i64 0, i64 %69\l  %71 = load i32, ptr %70, align 4\l  %72 = add nsw i32 %71, %64\l  store i32 %72, ptr %70, align 4\l  br label %73\l}"];
	Node0x55da38c81a10 -> Node0x55da38c81a60;
	Node0x55da38c81a60 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%73:\l73:                                               \l  %74 = load i32, ptr %3, align 4\l  %75 = add nsw i32 %74, 1\l  store i32 %75, ptr %3, align 4\l  br label %46, !llvm.loop !9\l}"];
	Node0x55da38c81a60 -> Node0x55da38c819c0;
	Node0x55da38c81ab0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7a88970",label="{%76:\l76:                                               \l  br label %77\l}"];
	Node0x55da38c81ab0 -> Node0x55da38c81b00;
	Node0x55da38c81b00 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7a88970",label="{%77:\l77:                                               \l  %78 = load i32, ptr %4, align 4\l  %79 = add nsw i32 %78, 1\l  store i32 %79, ptr %4, align 4\l  br label %42, !llvm.loop !10\l}"];
	Node0x55da38c81b00 -> Node0x55da38c81920;
	Node0x55da38c81b50 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#cedaeb70",label="{%80:\l80:                                               \l  br label %81\l}"];
	Node0x55da38c81b50 -> Node0x55da38c81ba0;
	Node0x55da38c81ba0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#cedaeb70",label="{%81:\l81:                                               \l  %82 = load i32, ptr %2, align 4\l  %83 = add nsw i32 %82, 1\l  store i32 %83, ptr %2, align 4\l  br label %38, !llvm.loop !11\l}"];
	Node0x55da38c81ba0 -> Node0x55da38c81880;
	Node0x55da38c81bf0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#7396f570",label="{%84:\l84:                                               \l  ret i32 0\l}"];
}
